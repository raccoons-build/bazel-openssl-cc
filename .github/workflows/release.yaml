name: Release
'on':
  workflow_dispatch: null
  push:
    tags:
    - '*'
jobs:
  generate-unix:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout repo
      uses: actions/checkout@v4.2.2
    - uses: actions/setup-python@v5
      with:
        python-version: "3.13"
    - run: sudo bash -c "curl --fail -L -o /usr/bin/buildifier https://github.com/bazelbuild/buildtools/releases/download/v7.3.1/buildifier-linux-amd64 && chmod 0755 /usr/bin/buildifier"
    - run: git config --global user.email "github@raccoons.build" && git config --global user.name "Raccoons Build"
    - name: Checkout BCR
      uses: actions/checkout@v4.2.2
      with:
        repository: illicitonion/bazel-central-registry
        token: ${{ secrets.BCR_GITHUB_TOKEN }}
        path: bazel-central-registry
        ref: refs/heads/main
    - run: (cd bazel-central-registry && git remote add upstream https://github.com/bazelbuild/bazel-central-registry.git && git fetch upstream && git reset --hard upstream/main)
    - run: python3 generate.py --os=unix --bcr_dir=$(pwd)/bazel-central-registry --overlay_tar_path=$(pwd)/bazel-openssl-cc-${{github.ref_name}}.unix.tar.gz --tag=${{github.ref_name}}.unix
    - name: Upload overlay
      uses: actions/upload-artifact@v4
      with:
        name: ${{github.ref_name}}.bcr.unix.wip.tar.gz
        path: /tmp/${{github.ref_name}}.bcr.unix.wip.tar.gz
        if-no-files-found: error
  generate_windows:
    runs-on: windows-latest
    steps:
    - name: Checkout repo
      uses: actions/checkout@v4.2.2
    - uses: actions/setup-python@v5
      with:
        python-version: "3.13"
    - uses: msys2/setup-msys2@v2
    - run: sudo bash -c "curl --fail -L -o C:\\buildifier.exe https://github.com/bazelbuild/buildtools/releases/download/v7.3.1/buildifier-windows-amd64.exe && chmod 0755 C:\\buildifier.exe"
      shell: msys2 {0}
    - run: git config --global user.email "github@raccoons.build" && git config --global user.name "Raccoons Build"
    - name: Checkout BCR
      uses: actions/checkout@v4.2.2
      with:
        repository: illicitonion/bazel-central-registry
        token: ${{ secrets.BCR_GITHUB_TOKEN }}
        path: bazel-central-registry
        ref: refs/heads/main
    - run: (cd bazel-central-registry && git remote add upstream https://github.com/bazelbuild/bazel-central-registry.git && git fetch upstream && git reset --hard upstream/main)
    - uses: nick-fields/retry@v2
      with:
        timeout_minutes: 10
        max_attempts: 3
        command: python3 generate.py --os=windows --bcr_dir=$(pwd)/bazel-central-registry --overlay_tar_path=$(pwd)/bazel-openssl-cc-${{github.ref_name}}.windows.tar.gz --tag=${{github.ref_name}}.windows
    - name: Upload overlay
      uses: actions/upload-artifact@v4
      with:
        name: ${{github.ref_name}}.bcr.windows.wip.tar.gz
        path: C:/${{github.ref_name}}.bcr.windows.wip.tar.gz
        if-no-files-found: error
  release:
    runs-on: ubuntu-latest
    needs:
      - generate-unix
      - generate-windows
    steps: 
      - name: Download Unix overlay
        uses: actions/download-artifact@v4
        with:
          name: ${{github.ref_name}}.bcr.unix.wip.tar.gz
          path: /tmp/
      - name: Download Windows overlay
        uses: actions/download-artifact@v4
        with:
          name: ${{github.ref_name}}.bcr.windows.wip.tar.gz
          path: C:\
      - run: cd bazel-central-registry && git checkout -b prep-${{github.ref_name}} && git add . && git commit -m "Release openssl ${{github.ref_name}}" && git push -u origin prep-${{github.ref_name}} && gh pr create --title "Add openssl ${{github.ref_name}}" --body "" --repo bazelbuild/bazel-central-registry
        env:
          GITHUB_TOKEN: ${{ secrets.BCR_GITHUB_TOKEN }}
      - name: Release
        uses: softprops/action-gh-release@v2
        if: startsWith(github.ref, 'refs/tags/')
        with:
          files: |
            bazel-openssl-cc-${{github.ref_name}}.unix.tar.gz
            bazel-openssl-cc-${{github.ref_name}}.windows.tar.gz
