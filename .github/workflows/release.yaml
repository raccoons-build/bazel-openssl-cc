name: Release
'on':
  workflow_dispatch: null
  push:
    tags:
    - '*'
jobs:
  generate-unix:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout repo
      uses: actions/checkout@v4.2.2
    - uses: actions/setup-python@v5
      with:
        python-version: "3.13"
    - run: git config --global user.email "github@raccoons.build" && git config --global user.name "Raccoons Build"
    - run: (cd bazel-central-registry && git remote add upstream https://github.com/bazelbuild/bazel-central-registry.git && git fetch upstream && git reset --hard upstream/main)
    - run: python3 generate_per_platform.py --os=unix --openssl_tar_path=/tmp/ --github_ref_name=${{github.ref_name}}
    - name: Upload overlay
      uses: actions/upload-artifact@v4
      with:
        name: ${{github.ref_name}}.bcr.unix.wip.tar.gz
        path: /tmp/${{github.ref_name}}.bcr.unix.wip.tar.gz
        if-no-files-found: error
  generate_windows:
    runs-on: windows-latest
    steps:
    - name: Checkout repo
      uses: actions/checkout@v4.2.2
    - uses: actions/setup-python@v5
      with:
        python-version: "3.13"
    - run: git config --global user.email "github@raccoons.build" && git config --global user.name "Raccoons Build"
    - uses: nick-fields/retry@v2
      with:
        timeout_minutes: 10
        max_attempts: 3
        command: python3 generate_per_platform.py --os=windows --openssl_tar_path=C:/ --github_ref_name=${{github.ref_name}}
    - name: Upload overlay
      uses: actions/upload-artifact@v4
      with:
        name: ${{github.ref_name}}.bcr.windows.wip.tar.gz
        path: C:/${{github.ref_name}}.bcr.windows.wip.tar.gz
        if-no-files-found: error
  merge-generate:
    runs-on: ubuntu-latest
    needs:
      - generate-unix
      - generate-windows
    steps:
      - name: Checkout repo
        uses: actions/checkout@v4.2.2
      - name: Checkout BCR
        uses: actions/checkout@v4.2.2
        with:
          repository: illicitonion/bazel-central-registry
          token: ${{ secrets.BCR_GITHUB_TOKEN }}
          path: bazel-central-registry
          ref: refs/heads/main
      - name: Download windows overlay and openssl files
        uses: actions/download-artifact@v4
        with:
          name: ${{github.ref_name}}.bcr.wip.windows.tar.gz
          path: /tmp/windows/
      - run: (cd /tmp && mkdir /tmp/windows_unzipped && tar -xzvf /tmp/windows/${{github.ref_name}}.bcr.wip.windows.tar.gz -C /tmp/windows_unzipped)
      - run: mkdir -p /tmp/windows_unzipped/windows/x86_64 && tar -xzvf /tmp/windows_unzipped/${{github.ref_name}}.bcr.wip.VC-WIN64A-masm.tar.gz -C /tmp/windows_unzipped/windows/x86_64
      - run: mkdir -p /tmp/windows_unzipped/windows/arm64 && tar -xzvf /tmp/windows_unzipped/${{github.ref_name}}.bcr.wip.VC-WIN64-CLANGASM-ARM.tar.gz -C /tmp/windows_unzipped/windows/arm64
      # We need to replace the `C:/tmp` strings with `/tmp` throughout the files so that the incldues do not break
      - run: find /tmp/windows_unzipped -type f -exec sed -i 's|C:/tmp|/tmp|g' {} +
      - name: Download unix overlay and openssl files
        uses: actions/download-artifact@v4
        with:
          name:  ${{github.ref_name}}.bcr.wip.unix.tar.gz
          path: /tmp/unix/
      - run: (cd /tmp && mkdir /tmp/unix_unzipped && tar -xzvf /tmp/unix/${{github.ref_name}}.bcr.wip.unix.tar.gz -C /tmp/unix_unzipped && mkdir /tmp/unix_unzipped/linux && mkdir /tmp/unix_unzipped/mac)
      - run: mkdir -p /tmp/unix_unzipped/linux/x86_64 && tar -xzvf /tmp/unix_unzipped/tmp/${{github.ref_name}}.bcr.wip.linux-x86_64-clang.tar.gz -C /tmp/unix_unzipped/linux/x86_64
      - run: mkdir -p /tmp/unix_unzipped/linux/arm64 && tar -xzvf /tmp/unix_unzipped/tmp/${{github.ref_name}}.bcr.wip.linux-aarch64.tar.gz -C /tmp/unix_unzipped/linux/arm64
      - run: mkdir -p /tmp/unix_unzipped/mac/x86_64 && tar -xzvf /tmp/unix_unzipped/tmp/${{github.ref_name}}.bcr.wip.darwin64-x86_64-cc.tar.gz -C /tmp/unix_unzipped/mac/x86_64
      - run: mkdir -p /tmp/unix_unzipped/mac/arm64 && tar -xzvf /tmp/unix_unzipped/tmp/${{github.ref_name}}.bcr.wip.darwin64-arm64-cc.tar.gz -C /tmp/unix_unzipped/mac/arm64
      - uses: actions/setup-python@v5
        with:
          python-version: "3.13"
      - run: sudo bash -c "curl --fail -L -o /usr/bin/buildifier https://github.com/bazelbuild/buildtools/releases/download/v7.3.1/buildifier-linux-amd64 && chmod 0755 /usr/bin/buildifier"
      - run: git config --global user.email "github@raccoons.build" && git config --global user.name "Raccoons Build"
      - run: (cd bazel-central-registry && git remote add upstream https://github.com/bazelbuild/bazel-central-registry.git && git fetch upstream && git reset --hard upstream/main)
      - run: python3 generate_combine_platforms.py --os=all --bcr_dir=$(pwd)/bazel-central-registry --openssl_tar_path=/tmp/ --tag=${{github.ref_name}}.bcr.wip --buildifier=/usr/bin/buildifier --github_ref_name=${{github.ref_name}}
      - run: tar czf bcr.tar.gz bazel-central-registry
      - name: Upload overlay
        uses: actions/upload-artifact@v4
        with:
          name: ${{github.ref_name}}.bcr.wip.tar.gz
          path: /tmp/${{github.ref_name}}.bcr.wip.tar.gz
          if-no-files-found: error
      - name: Upload bcr
        uses: actions/upload-artifact@v4
        with:
          name: bcr.tar.gz
          path: bcr.tar.gz
          if-no-files-found: error
  release:
    runs-on: ubuntu-latest
    needs:
      - merge-generate
    steps: 
      - name: Download overlay
        uses: actions/download-artifact@v4
        with:
          name: ${{github.ref_name}}.bcr.wip.tar.gz
          path: /tmp/
      - name: Download bcr
        uses: actions/download-artifact@v4
        with:
          name: bcr.tar.gz
          path: /tmp/
      - run: (cd /tmp && tar xzf /tmp/bcr.tar.gz)
      - run: cd bazel-central-registry && mv /tmp/${{github.ref_name}}.bcr.wip.tar.gz bazel-openssl-cc-${{github.ref_name}}.bcr.tar.gz
      - run: cd bazel-central-registry && git checkout -b prep-${{github.ref_name}} && git add . && git commit -m "Release openssl ${{github.ref_name}}" && git push -u origin prep-${{github.ref_name}} && gh pr create --title "Add openssl ${{github.ref_name}}" --body "" --repo bazelbuild/bazel-central-registry
        env:
          GITHUB_TOKEN: ${{ secrets.BCR_GITHUB_TOKEN }}
      - name: Release
        uses: softprops/action-gh-release@v2
        if: startsWith(github.ref, 'refs/tags/')
        with:
          files: |
            bazel-openssl-cc-${{github.ref_name}}.bcr.tar.gz
