name: Release
"on":
  workflow_dispatch: null
  pull_request: null
jobs:
  pr-generate-unix:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repo
        uses: actions/checkout@v4.2.2
      - uses: actions/setup-python@v5
        with:
          python-version: "3.13"
      - run: git config --global user.email "github@raccoons.build" && git config --global user.name "Raccoons Build"
      - name: Checkout BCR
        uses: actions/checkout@v4.2.2
        with:
          repository: illicitonion/bazel-central-registry
          token: ${{ secrets.BCR_GITHUB_TOKEN }}
          path: bazel-central-registry
          ref: refs/heads/main
      - run: (cd bazel-central-registry && git remote add upstream https://github.com/bazelbuild/bazel-central-registry.git && git fetch upstream && git reset --hard upstream/main)
      - run: python3 generate_per_platform.py --os=unix --bcr_dir=$(pwd)/bazel-central-registry --tag=3.3.1.bcr.unix.wip --openssl_tar_path=/tmp/3.3.1.bcr.wip.unix.tar.gz
      - run: tar czf bcr.unix.tar.gz bazel-central-registry
      - name: Upload intermediate unix overlay
        uses: actions/upload-artifact@v4
        with:
          name: 3.3.1.bcr.wip.unix.tar.gz
          path: /tmp/3.3.1.bcr.wip.unix.tar.gz
          if-no-files-found: error
      - name: Upload intermediate unix bcr
        uses: actions/upload-artifact@v4
        with:
          name: bcr.unix.tar.gz
          path: bcr.unix.tar.gz
          if-no-files-found: error
  pr-generate-windows:
    runs-on: windows-latest
    steps:
      - name: Checkout repo
        uses: actions/checkout@v4.2.2
      - uses: actions/setup-python@v5
        with:
          python-version: "3.13"
      - name: Run PowerShell command to increase path lengths
        shell: pwsh
        run: |
          New-ItemProperty -Path "HKLM:\SYSTEM\CurrentControlSet\Control\FileSystem" -Name "LongPathsEnabled" -Value 1 -PropertyType DWORD -Force
      - run: git config --global user.email "github@raccoons.build" && git config --global user.name "Raccoons Build"
      - name: Checkout BCR
        uses: actions/checkout@v4.2.2
        with:
          repository: illicitonion/bazel-central-registry
          token: ${{ secrets.BCR_GITHUB_TOKEN }}
          path: bazel-central-registry
          ref: refs/heads/main
      - name: Setup nasm
        uses: ilammy/setup-nasm@v1
      - name: Preparing nmake
        uses: ilammy/msvc-dev-cmd@v1
      - run: (cd bazel-central-registry && git remote add upstream https://github.com/bazelbuild/bazel-central-registry.git && git fetch upstream && git reset --hard upstream/main)
      - name: Run git command for longer paths
        run: git config --system core.longpaths true
      - uses: nick-fields/retry@v2
        with:
          timeout_minutes: 10
          max_attempts: 3
          command: python3 generate_per_platform.py --os=windows --bcr_dir=$(pwd)/bazel-central-registry --tag=3.3.1.bcr.windows.wip --openssl_tar_path=C:/3.3.1.bcr.wip.windows.tar.gz
      - run: tar czf bcr.windows.tar.gz bazel-central-registry
      - name: Upload intermediate windows overlay
        uses: actions/upload-artifact@v4
        with:
          name: 3.3.1.bcr.wip.windows.tar.gz
          path: C:/3.3.1.bcr.wip.windows.tar.gz
          if-no-files-found: error
      - name: Upload intermediate windows bcr
        uses: actions/upload-artifact@v4
        with:
          name: bcr.windows.tar.gz
          path: bcr.windows.tar.gz
          if-no-files-found: error
  pr-merge-generate:
    runs-on: ubuntu-latest
    needs:
      - pr-generate-unix
      - pr-generate-windows
    steps:
      - name: Checkout repo
        uses: actions/checkout@v4.2.2
      - name: Download windows overlay
        uses: actions/download-artifact@v4
        with:
          name: 3.3.1.bcr.wip.windows.tar.gz
          path: /tmp/windows/
      - name: Download windows bcr
        uses: actions/download-artifact@v4
        with:
          name: bcr.windows.tar.gz
          path: /tmp/windows/
      - run: (cd /tmp && mkdir /tmp/windows_unzipped && tar -xzvf /tmp/windows/bcr.windows.tar.gz -C /tmp/windows_unzipped )
      - run: (cd /tmp && tar -xzvf /tmp/windows/3.3.1.bcr.wip.windows.tar.gz -C /tmp/windows_unzipped)
      - name: Download unix overlay
        uses: actions/download-artifact@v4
        with:
          name: 3.3.1.bcr.wip.unix.tar.gz
          path: /tmp/unix/
      - name: Download unix bcr
        uses: actions/download-artifact@v4
        with:
          name: bcr.unix.tar.gz
          path: /tmp/unix/
      - run: (cd /tmp && mkdir /tmp/unix_unzipped && tar -xzvf /tmp/unix/bcr.unix.tar.gz -C /tmp/unix_unzipped)
      - run: (cd /tmp && tar -xzvf /tmp/unix/3.3.1.bcr.wip.unix.tar.gz -C /tmp/unix_unzipped)
      - uses: actions/setup-python@v5
        with:
          python-version: "3.13"
      - run: ./download-buildifier.sh
      - run: git config --global user.email "github@raccoons.build" && git config --global user.name "Raccoons Build"
      - run: python3 generate_combine_platforms.py --os=all --bcr_dir=$(pwd)/bazel-central-registry --overlay_tar_path=/tmp/3.3.1.bcr.wip.tar.gz --openssl_tar_path=/tmp/ --tag=3.3.1.bcr.wip --release_tar_url_template=file:///tmp/3.3.1.bcr.wip.tar.gz --buildifier=/tmp/buildifier.exe
      - run: tar czf bcr.tar.gz bazel-central-registry
      - name: Upload overlay
        uses: actions/upload-artifact@v4
        with:
          name: 3.3.1.bcr.wip.tar.gz
          path: /tmp/3.3.1.bcr.wip.tar.gz
          if-no-files-found: error
      - name: Upload bcr
        uses: actions/upload-artifact@v4
        with:
          name: bcr.tar.gz
          path: bcr.tar.gz
          if-no-files-found: error
  pr-test-unix:
    strategy:
      matrix:
        os:
          # x86 but doesn't work right now
          # macos-13
          # arm64
          - macos-14
          # x86
          - ubuntu-latest
          # arm64
          - ubuntu-24.04-arm
    needs:
      - pr-merge-generate
    runs-on: ${{ matrix.os }}
    steps:
      - name: Download overlay
        uses: actions/download-artifact@v4
        with:
          name: 3.3.1.bcr.wip.tar.gz
          path: /tmp/
      - name: Download bcr
        uses: actions/download-artifact@v4
        with:
          name: bcr.tar.gz
          path: /tmp/
      - run: (cd /tmp && tar xzf /tmp/bcr.tar.gz)
      - run: mkdir workspace && cd workspace && echo 8.0.0 > .bazelversion && echo -e 'name = "openssl_wrapper"\nbazel_dep(name = "openssl", version = "3.3.1.bcr.wip")' > MODULE.bazel && bazel test --verbose_failures --sandbox_debug -s --registry="file:///tmp/bazel-central-registry" -k @openssl//...
  pr-test-windows:
    strategy:
      matrix:
        os:
          # No arm64 small hosted runners.
          # So we only use x86
          - windows-latest
    needs:
      - pr-merge-generate
    runs-on: ${{ matrix.os }}
    steps:
      - name: Download msys tools
        uses: msys2/setup-msys2@v2
      - name: Download overlay
        uses: actions/download-artifact@v4
        with:
          name: 3.3.1.bcr.wip.tar.gz
          path: C:\
      - name: Download bcr
        uses: actions/download-artifact@v4
        with:
          name: bcr.tar.gz
          path: C:\
      - name: Setup nasm
        uses: ilammy/setup-nasm@v1
      - run: (cd C:\ && tar xzf C:\bcr.tar.gz)
      - run: mkdir workspace && cd workspace && echo 8.0.0 > .bazelversion && echo 'bazel_dep(name = "openssl", version = "3.3.1.bcr.wip")' > MODULE.bazel && bazel test --verbose_failures --sandbox_debug -s --registry="file:///C:/bazel-central-registry" -k @openssl//...